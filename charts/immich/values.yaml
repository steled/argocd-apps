env:
  - name: REDIS_HOSTNAME
    value: immich-redis-master
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: immich-secret
        key: postgresql-user-password
  - name: DB_HOSTNAME
    value: immich-postgresql
  - name: DB_DATABASE_NAME
    value: ''
  - name: DB_USERNAME
    value: ''
  - name: IMMICH_MACHINE_LEARNING_URL
    value: http://immich-machine-learning:3003
  # - name: IMMICH_LOG_LEVEL
  #   value: verbose

image:
  tag: ''

immich:
  metrics:
    # Enabling this will create the service monitors needed to monitor immich with the prometheus operator
    enabled: true
  persistence:
    # Main data store for all photos shared between different components.
    library:
      # Automatically creating the library volume is not supported by this chart
      # You have to specify an existing PVC to use
      existingClaim: immich-pvc

server:
  ingress:
    main:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: cloudflare-letsencrypt-production
        ingress.cilium.io/loadbalancer-mode: shared
        # proxy-body-size is set to 0 to remove the body limit on file uploads
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      hosts:
        - host: ''
          paths:
            - path: "/"
      ingressClassName: cilium
      tls:
        - secretName: immich-tls
          hosts:
            - ''

machine-learning:
  persistence:
    cache:
      type: pvc
      storageClass: longhorn

useDeprecatedPostgresChart: true

postgresql:
  enabled: true
  image:
    repository: tensorchord/pgvecto-rs
    tag: pg14-v0.3.0
  # backup:
  #   enabled: true
  #   cronjob:
  #     schedule: "@hourly"
  #     storage:
  #       enabled: true
  #       # resourcePolicy: keep
  #       storageClass: longhorn
  primary:
    resourcesPreset: "large"
    containerSecurityContext:
      readOnlyRootFilesystem: false
    initdb:
      scripts:
        create-extensions.sql: |
          CREATE EXTENSION cube;
          CREATE EXTENSION earthdistance;
          CREATE EXTENSION vectors;
    
  global:
    defaultStorageClass: longhorn
    postgresql:
      auth:
        database: ''
        username: ''
        existingSecret: immich-secret
        secretKeys:
          adminPasswordKey: postgresql-admin-password
          userPasswordKey: postgresql-user-password

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  # global:
  #   defaultStorageClass: longhorn
  # master:
  #   persistence:
  #     enabled: true
  #     storageClass: longhorn
  #   resourcesPreset: "micro"
  # replica:
  #   persistence:
  #     enabled: true
  #     storageClass: longhorn
  #   replicaCount: 1
  #   resourcesPreset: "micro"
