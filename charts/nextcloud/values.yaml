pvc:
  postgresql:
    backup:
      storage: 1Gi
      storageClassName: longhorn

job:
  nextcloud:
    maintenance:
      image: fpm

ingress:
  enabled: true
  annotations:
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: duckdns-letsencrypt-production
    cert-manager.io/cluster-issuer: cloudflare-letsencrypt-staging
    ingress.cilium.io/loadbalancer-mode: shared
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
    # nginx.ingress.kubernetes.io/proxy-body-size: 32M
    # nginx.ingress.kubernetes.io/server-snippet: |-
    #   proxy_hide_header X-Powered-By;
    #   server_name next.steled.org;
    #   server_tokens off;
    #   rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
    #   rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
    #   rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
    #   rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
    #   location = /.well-known/carddav {
    #     return 301 $scheme://$host/remote.php/dav;
    #   }
    #   location = /.well-known/caldav {
    #     return 301 $scheme://$host/remote.php/dav;
    #   }
    #   location = /robots.txt {
    #     allow all;
    #     log_not_found off;
    #     access_log off;
    #   }
    #   location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
    #     deny all;
    #   }
    #   location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
    #     deny all;
    #   }
    #   add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;
  spec:
    ingressClassName: cilium
  tls:
    - secretName: nextcloud-tls
      hosts:
        - ''

# lifecycle:
#   # postStartCommand: [ "/bin/sh", "-c", "echo \"ServerName ${ip_address}\" | tee -a /etc/apache2/apache2.conf " ] # && echo \"LogLevel debug\" | tee -a /etc/apache2/apache2.conf" ]
#   postStartCommand: [ "/bin/sh", "-c", "su -s /bin/bash www-data -c 'php occ maintenance:repair --include-expensive'" ]

image:
  flavor: fpm

nginx:
  enabled: true
  config:
    headers:
      "Strict-Transport-Security": "max-age=15768000; includeSubDomains; preload;"
    custom: |-
      fastcgi_send_timeout 180s;
      fastcgi_read_timeout 180s;
      proxy_connect_timeout 180s;
      proxy_read_timeout 180s;
      proxy_send_timeout 180s;
      send_timeout 180s;
  # securityContext:
  #   runAsUser: 33
  #   runAsGroup: 33
  #   # runAsNonRoot: true
  #   # readOnlyRootFilesystem: true

nextcloud:
  host: ''

  trustedDomains:
    - ''

  # securityContext:
  #   runAsGroup: 33
  #   runAsUser: 33
  #   runAsNonRoot: true
  #   readOnlyRootFilesystem: false

  podSecurityContext:
    fsGroup: 33

  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    usernameKey: nextcloud-username
    passwordKey: nextcloud-password
    smtpUsernameKey: smtp-username
    smtpPasswordKey: smtp-password
    smtpHostKey: smtp-host

  configs:
    custom.config.php: |-
      <?php
      $CONFIG = array (
        'encryption.legacy_format_support' => false,
        'default_phone_region' => 'DE',
        # 'overwritehost' => 'XXX',
        'overwriteprotocol' => 'https',
        'trusted_proxies' => array (
          0 => '127.0.0.1',
          1 => '10.0.0.0/8',
          2 => '172.16.4.40',
        ),
        'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
        # 'overwrite.cli.url' => 'https://XXX',
        # 'mail_smtpdebug' => false,
        # 'mail_from_address' => 'next-info',
        # 'mail_smtpmode' => 'smtp',
        # 'mail_domain' => 'XXX',
        # 'mail_smtphost' => 'XXX',
        # 'mail_smtpport' => '587',
        # 'mail_smtpsecure' => '',
        # 'mail_smtpauth' => true,
        # 'mail_smtpname' => 'XXX',
        # 'mail_smtppassword' => 'XXX',
        'maintenance_window_start' => 1,
      );
    # enable for logging
    # logging.config.php: |-
    #   <?php
    #   $CONFIG = array (
    #     'log_type' => 'file',
    #     'logfile' => 'nextcloud.log',
    #     'loglevel' => 0,
    #     'logdateformat' => 'F d, Y H:i:s'
    #   );

  extraEnv:
    - name: OVERWRITEHOST
      value: ''
    # - name: TRUSTED_PROXIES
    #   value: ${nextcloud_proxies}
    - name: OVERWRITECLIURL
      value: ''

  # defaultConfigs:
  #   apcu.config.php: false

  mail:
    enabled: true
    fromAddress: ''
    domain: ''
    smtp:
      port: 587
      secure: ''
      authtype: LOGIN

phpClientHttpsFix:
  enabled: true
  protocol: https

persistence:
  enabled: true
  storageClass: longhorn
  size: 8Gi

cronjob:
  enabled: true

internalDatabase:
  enabled: false

externalDatabase:
  enabled: true
  type: postgresql
  host: nextcloud-postgresql.nextcloud.svc.cluster.local:5432
  database: ''
  existingSecret:
    enabled: true
    secretName: nextcloud-secret
    usernameKey: postgresql-username
    passwordKey: postgresql-user-password

postgresql:
  enabled: true
  backup:
    enabled: true
    cronjob:
      schedule: "@hourly"
      storage:
        enabled: true
        # resourcePolicy: keep
        storageClass: longhorn
    
  global:
    defaultStorageClass: longhorn
    postgresql:
      auth:
        database: ''
        username: ''
        existingSecret: nextcloud-secret
        secretKeys:
          adminPasswordKey: postgresql-admin-password
          userPasswordKey: postgresql-user-password

  primary:
    persistence:
      enabled: true
      storageClass: longhorn
    resourcesPreset: "small"

redis:
  enabled: true
  auth:
    existingSecret: nextcloud-secret
    existingSecretPasswordKey: redis-password
  global:
    defaultStorageClass: longhorn
  master:
    persistence:
      enabled: true
      storageClass: longhorn
    resourcesPreset: "micro"
  replica:
    persistence:
      enabled: true
      storageClass: longhorn
    replicaCount: 1
    resourcesPreset: "micro"

livenessProbe:
  initialDelaySeconds: 240

readinessProbe:
  initialDelaySeconds: 240
